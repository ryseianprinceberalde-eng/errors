{"ast":null,"code":"import BaseApiService from './baseApiService';\nimport axios from 'axios';\nclass GeocodeService extends BaseApiService {\n  constructor() {\n    super();\n    // Use environment variable or fallback to direct URL\n    this.nominatimBase = process.env.REACT_APP_GEOCODE_API_URL || 'https://nominatim.openstreetmap.org';\n    this.defaultParams = {\n      format: 'json',\n      addressdetails: 1,\n      limit: 8,\n      'accept-language': 'en'\n    };\n\n    // Create throttled methods to prevent rate limiting\n    this.throttledSearch = this.throttle(this.search.bind(this), 1000);\n    this.throttledReverse = this.throttle(this.reverse.bind(this), 1000);\n  }\n\n  // Throttle helper to prevent too many requests\n  throttle(func, limit) {\n    let inThrottle;\n    return function (...args) {\n      if (!inThrottle) {\n        func.apply(this, args);\n        inThrottle = true;\n        setTimeout(() => inThrottle = false, limit);\n      }\n    };\n  }\n\n  /**\r\n   * Search for locations using Nominatim (OpenStreetMap)\r\n   * @param {string} q - search query\r\n   * @returns {Promise<Array>} array of results { name, lat, lon, type, country }\r\n   */\n  async search(q) {\n    if (!q || !q.trim()) return [];\n    const url = `${this.nominatimBase}/search`;\n    try {\n      const params = {\n        q,\n        ...this.defaultParams,\n        // Add timestamp to prevent caching\n        _t: Date.now()\n      };\n      const res = await axios.get(url, {\n        params,\n        timeout: 8000,\n        headers: {\n          'Accept': 'application/json',\n          'Cache-Control': 'no-cache'\n        }\n      });\n\n      // Process and validate the response\n      if (!Array.isArray(res.data)) {\n        console.warn('Unexpected response format:', res.data);\n        return [];\n      }\n      return res.data.map(item => {\n        var _item$address, _item$address2, _item$address3, _item$address4, _item$address5;\n        return {\n          name: item.display_name.split(',')[0] || item.display_name,\n          fullName: item.display_name,\n          lat: parseFloat(item.lat),\n          lon: parseFloat(item.lon),\n          type: item.type || 'place',\n          country: ((_item$address = item.address) === null || _item$address === void 0 ? void 0 : _item$address.country) || '',\n          city: ((_item$address2 = item.address) === null || _item$address2 === void 0 ? void 0 : _item$address2.city) || ((_item$address3 = item.address) === null || _item$address3 === void 0 ? void 0 : _item$address3.town) || ((_item$address4 = item.address) === null || _item$address4 === void 0 ? void 0 : _item$address4.village) || '',\n          state: ((_item$address5 = item.address) === null || _item$address5 === void 0 ? void 0 : _item$address5.state) || '',\n          timestamp: Date.now()\n        };\n      });\n    } catch (err) {\n      var _err$response;\n      console.warn('Geocode search failed:', err.message);\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 429) {\n        // Handle rate limiting\n        console.warn('Rate limit reached, retrying in 1 second...');\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        return this.search(q);\n      }\n      return [];\n    }\n  }\n\n  /**\r\n   * Reverse geocode lat/lon to a human-friendly name\r\n   */\n  async reverse(lat, lon) {\n    if (!this.isValidCoordinates(lat, lon)) return null;\n    const url = `${this.nominatimBase}/reverse`;\n    try {\n      const params = {\n        lat,\n        lon,\n        format: 'json',\n        addressdetails: 1,\n        'accept-language': 'en',\n        // Add timestamp to prevent caching\n        _t: Date.now()\n      };\n      const res = await axios.get(url, {\n        params,\n        timeout: 8000,\n        headers: {\n          'Accept': 'application/json',\n          'Cache-Control': 'no-cache'\n        }\n      });\n      return {\n        name: res.data.display_name,\n        lat: parseFloat(res.data.lat),\n        lon: parseFloat(res.data.lon),\n        address: res.data.address\n      };\n    } catch (err) {\n      console.warn('Reverse geocode failed:', err.message);\n      return null;\n    }\n  }\n\n  // Watch location changes in real-time\n  watchLocation(callback, errorCallback) {\n    if (!navigator.geolocation) {\n      errorCallback === null || errorCallback === void 0 ? void 0 : errorCallback('Geolocation is not supported by this browser.');\n      return null;\n    }\n    const options = {\n      enableHighAccuracy: true,\n      timeout: 5000,\n      maximumAge: 0\n    };\n    const watchId = navigator.geolocation.watchPosition(async position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      try {\n        const location = await this.reverse(latitude, longitude);\n        callback === null || callback === void 0 ? void 0 : callback({\n          ...location,\n          coords: {\n            lat: latitude,\n            lon: longitude\n          },\n          accuracy: position.coords.accuracy,\n          timestamp: position.timestamp\n        });\n      } catch (error) {\n        errorCallback === null || errorCallback === void 0 ? void 0 : errorCallback(error);\n      }\n    }, error => errorCallback === null || errorCallback === void 0 ? void 0 : errorCallback(error), options);\n    return watchId;\n  }\n\n  // Stop watching location changes\n  clearLocationWatch(watchId) {\n    if (watchId && navigator.geolocation) {\n      navigator.geolocation.clearWatch(watchId);\n    }\n  }\n\n  // Get cached results for faster responses\n  getCachedResults(query) {\n    const cacheKey = `geocode_${query}`;\n    const cached = localStorage.getItem(cacheKey);\n    if (cached) {\n      const {\n        data,\n        timestamp\n      } = JSON.parse(cached);\n      // Cache for 1 hour\n      if (Date.now() - timestamp < 3600000) {\n        return data;\n      }\n      localStorage.removeItem(cacheKey);\n    }\n    return null;\n  }\n\n  // Cache results for future use\n  cacheResults(query, data) {\n    const cacheKey = `geocode_${query}`;\n    localStorage.setItem(cacheKey, JSON.stringify({\n      data,\n      timestamp: Date.now()\n    }));\n  }\n}\nexport default new GeocodeService();","map":{"version":3,"names":["BaseApiService","axios","GeocodeService","constructor","nominatimBase","process","env","REACT_APP_GEOCODE_API_URL","defaultParams","format","addressdetails","limit","throttledSearch","throttle","search","bind","throttledReverse","reverse","func","inThrottle","args","apply","setTimeout","q","trim","url","params","_t","Date","now","res","get","timeout","headers","Array","isArray","data","console","warn","map","item","_item$address","_item$address2","_item$address3","_item$address4","_item$address5","name","display_name","split","fullName","lat","parseFloat","lon","type","country","address","city","town","village","state","timestamp","err","_err$response","message","response","status","Promise","resolve","isValidCoordinates","watchLocation","callback","errorCallback","navigator","geolocation","options","enableHighAccuracy","maximumAge","watchId","watchPosition","position","latitude","longitude","coords","location","accuracy","error","clearLocationWatch","clearWatch","getCachedResults","query","cacheKey","cached","localStorage","getItem","JSON","parse","removeItem","cacheResults","setItem","stringify"],"sources":["C:/xampp/htdocs/errors/src/services/api/geocodeService.js"],"sourcesContent":["import BaseApiService from './baseApiService';\r\nimport axios from 'axios';\r\n\r\nclass GeocodeService extends BaseApiService {\r\n  constructor() {\r\n    super();\r\n    // Use environment variable or fallback to direct URL\r\n    this.nominatimBase = process.env.REACT_APP_GEOCODE_API_URL || 'https://nominatim.openstreetmap.org';\r\n    this.defaultParams = {\r\n      format: 'json',\r\n      addressdetails: 1,\r\n      limit: 8,\r\n      'accept-language': 'en'\r\n    };\r\n    \r\n    // Create throttled methods to prevent rate limiting\r\n    this.throttledSearch = this.throttle(this.search.bind(this), 1000);\r\n    this.throttledReverse = this.throttle(this.reverse.bind(this), 1000);\r\n  }\r\n\r\n  // Throttle helper to prevent too many requests\r\n  throttle(func, limit) {\r\n    let inThrottle;\r\n    return function(...args) {\r\n      if (!inThrottle) {\r\n        func.apply(this, args);\r\n        inThrottle = true;\r\n        setTimeout(() => inThrottle = false, limit);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Search for locations using Nominatim (OpenStreetMap)\r\n   * @param {string} q - search query\r\n   * @returns {Promise<Array>} array of results { name, lat, lon, type, country }\r\n   */\r\n  async search(q) {\r\n    if (!q || !q.trim()) return [];\r\n    const url = `${this.nominatimBase}/search`;\r\n    \r\n    try {\r\n      const params = { \r\n        q, \r\n        ...this.defaultParams,\r\n        // Add timestamp to prevent caching\r\n        _t: Date.now()\r\n      };\r\n      \r\n      const res = await axios.get(url, { \r\n        params,\r\n        timeout: 8000,\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Cache-Control': 'no-cache'\r\n        }\r\n      });\r\n\r\n      // Process and validate the response\r\n      if (!Array.isArray(res.data)) {\r\n        console.warn('Unexpected response format:', res.data);\r\n        return [];\r\n      }\r\n\r\n      return res.data.map(item => ({\r\n        name: item.display_name.split(',')[0] || item.display_name,\r\n        fullName: item.display_name,\r\n        lat: parseFloat(item.lat),\r\n        lon: parseFloat(item.lon),\r\n        type: item.type || 'place',\r\n        country: item.address?.country || '',\r\n        city: item.address?.city || item.address?.town || item.address?.village || '',\r\n        state: item.address?.state || '',\r\n        timestamp: Date.now()\r\n      }));\r\n    } catch (err) {\r\n      console.warn('Geocode search failed:', err.message);\r\n      if (err.response?.status === 429) {\r\n        // Handle rate limiting\r\n        console.warn('Rate limit reached, retrying in 1 second...');\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        return this.search(q);\r\n      }\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reverse geocode lat/lon to a human-friendly name\r\n   */\r\n  async reverse(lat, lon) {\r\n    if (!this.isValidCoordinates(lat, lon)) return null;\r\n    const url = `${this.nominatimBase}/reverse`;\r\n    \r\n    try {\r\n      const params = { \r\n        lat, \r\n        lon, \r\n        format: 'json', \r\n        addressdetails: 1, \r\n        'accept-language': 'en',\r\n        // Add timestamp to prevent caching\r\n        _t: Date.now()\r\n      };\r\n      \r\n      const res = await axios.get(url, { \r\n        params,\r\n        timeout: 8000,\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Cache-Control': 'no-cache'\r\n        }\r\n      });\r\n      \r\n      return {\r\n        name: res.data.display_name,\r\n        lat: parseFloat(res.data.lat),\r\n        lon: parseFloat(res.data.lon),\r\n        address: res.data.address\r\n      };\r\n    } catch (err) {\r\n      console.warn('Reverse geocode failed:', err.message);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Watch location changes in real-time\r\n  watchLocation(callback, errorCallback) {\r\n    if (!navigator.geolocation) {\r\n      errorCallback?.('Geolocation is not supported by this browser.');\r\n      return null;\r\n    }\r\n\r\n    const options = {\r\n      enableHighAccuracy: true,\r\n      timeout: 5000,\r\n      maximumAge: 0\r\n    };\r\n\r\n    const watchId = navigator.geolocation.watchPosition(\r\n      async (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        try {\r\n          const location = await this.reverse(latitude, longitude);\r\n          callback?.({\r\n            ...location,\r\n            coords: {\r\n              lat: latitude,\r\n              lon: longitude\r\n            },\r\n            accuracy: position.coords.accuracy,\r\n            timestamp: position.timestamp\r\n          });\r\n        } catch (error) {\r\n          errorCallback?.(error);\r\n        }\r\n      },\r\n      (error) => errorCallback?.(error),\r\n      options\r\n    );\r\n\r\n    return watchId;\r\n  }\r\n\r\n  // Stop watching location changes\r\n  clearLocationWatch(watchId) {\r\n    if (watchId && navigator.geolocation) {\r\n      navigator.geolocation.clearWatch(watchId);\r\n    }\r\n  }\r\n\r\n  // Get cached results for faster responses\r\n  getCachedResults(query) {\r\n    const cacheKey = `geocode_${query}`;\r\n    const cached = localStorage.getItem(cacheKey);\r\n    if (cached) {\r\n      const { data, timestamp } = JSON.parse(cached);\r\n      // Cache for 1 hour\r\n      if (Date.now() - timestamp < 3600000) {\r\n        return data;\r\n      }\r\n      localStorage.removeItem(cacheKey);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // Cache results for future use\r\n  cacheResults(query, data) {\r\n    const cacheKey = `geocode_${query}`;\r\n    localStorage.setItem(cacheKey, JSON.stringify({\r\n      data,\r\n      timestamp: Date.now()\r\n    }));\r\n  }\r\n}\r\n\r\nexport default new GeocodeService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}