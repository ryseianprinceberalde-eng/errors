{"ast":null,"code":"import BaseApiService from './baseApiService.js';\nimport axios from 'axios';\nclass GeocodeService extends BaseApiService {\n  constructor() {\n    super();\n    this.nominatimBase = 'https://nominatim.openstreetmap.org';\n    this.defaultParams = {\n      format: 'json',\n      addressdetails: 1,\n      limit: 8,\n      'accept-language': 'en'\n    };\n  }\n\n  /**\r\n   * Search for locations using Nominatim (OpenStreetMap)\r\n   * @param {string} q - search query\r\n   * @returns {Promise<Array>} array of results { name, lat, lon, type, country }\r\n   */\n  async search(q) {\n    if (!q || !q.trim()) return [];\n    const url = `${this.nominatimBase}/search`;\n    try {\n      const params = {\n        q,\n        ...this.defaultParams\n      };\n      const res = await axios.get(url, {\n        params,\n        timeout: 8000,\n        headers: {\n          'User-Agent': 'WeatherPredict/1.0 (your-email@example.com)'\n        }\n      });\n      return res.data.map(item => {\n        var _item$address;\n        return {\n          name: item.display_name.split(',')[0] || item.display_name,\n          lat: parseFloat(item.lat),\n          lon: parseFloat(item.lon),\n          type: item.type || 'place',\n          country: ((_item$address = item.address) === null || _item$address === void 0 ? void 0 : _item$address.country) || ''\n        };\n      });\n    } catch (err) {\n      console.warn('Geocode search failed:', err.message);\n      return [];\n    }\n  }\n\n  /**\r\n   * Reverse geocode lat/lon to a human-friendly name\r\n   */\n  async reverse(lat, lon) {\n    if (!this.isValidCoordinates(lat, lon)) return null;\n    const url = `${this.nominatimBase}/reverse`;\n    try {\n      const params = {\n        lat,\n        lon,\n        format: 'json',\n        addressdetails: 1,\n        'accept-language': 'en'\n      };\n      const res = await axios.get(url, {\n        params,\n        timeout: 8000,\n        headers: {\n          'User-Agent': 'WeatherPredict/1.0 (your-email@example.com)'\n        }\n      });\n      return {\n        name: res.data.display_name,\n        lat: parseFloat(res.data.lat),\n        lon: parseFloat(res.data.lon),\n        address: res.data.address\n      };\n    } catch (err) {\n      console.warn('Reverse geocode failed:', err.message);\n      return null;\n    }\n  }\n}\nexport default new GeocodeService();","map":{"version":3,"names":["BaseApiService","axios","GeocodeService","constructor","nominatimBase","defaultParams","format","addressdetails","limit","search","q","trim","url","params","res","get","timeout","headers","data","map","item","_item$address","name","display_name","split","lat","parseFloat","lon","type","country","address","err","console","warn","message","reverse","isValidCoordinates"],"sources":["C:/xampp/htdocs/errors/src/services/api/geocodeService.js"],"sourcesContent":["import BaseApiService from './baseApiService.js';\r\nimport axios from 'axios';\r\n\r\nclass GeocodeService extends BaseApiService {\r\n  constructor() {\r\n    super();\r\n    this.nominatimBase = 'https://nominatim.openstreetmap.org';\r\n    this.defaultParams = {\r\n      format: 'json',\r\n      addressdetails: 1,\r\n      limit: 8,\r\n      'accept-language': 'en'\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Search for locations using Nominatim (OpenStreetMap)\r\n   * @param {string} q - search query\r\n   * @returns {Promise<Array>} array of results { name, lat, lon, type, country }\r\n   */\r\n  async search(q) {\r\n    if (!q || !q.trim()) return [];\r\n    const url = `${this.nominatimBase}/search`;\r\n    try {\r\n      const params = { q, ...this.defaultParams };\r\n      const res = await axios.get(url, { params, timeout: 8000, headers: { 'User-Agent': 'WeatherPredict/1.0 (your-email@example.com)' } });\r\n      return res.data.map(item => ({\r\n        name: item.display_name.split(',')[0] || item.display_name,\r\n        lat: parseFloat(item.lat),\r\n        lon: parseFloat(item.lon),\r\n        type: item.type || 'place',\r\n        country: item.address?.country || ''\r\n      }));\r\n    } catch (err) {\r\n      console.warn('Geocode search failed:', err.message);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reverse geocode lat/lon to a human-friendly name\r\n   */\r\n  async reverse(lat, lon) {\r\n    if (!this.isValidCoordinates(lat, lon)) return null;\r\n    const url = `${this.nominatimBase}/reverse`;\r\n    try {\r\n      const params = { lat, lon, format: 'json', addressdetails: 1, 'accept-language': 'en' };\r\n      const res = await axios.get(url, { params, timeout: 8000, headers: { 'User-Agent': 'WeatherPredict/1.0 (your-email@example.com)' } });\r\n      return {\r\n        name: res.data.display_name,\r\n        lat: parseFloat(res.data.lat),\r\n        lon: parseFloat(res.data.lon),\r\n        address: res.data.address\r\n      };\r\n    } catch (err) {\r\n      console.warn('Reverse geocode failed:', err.message);\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new GeocodeService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}