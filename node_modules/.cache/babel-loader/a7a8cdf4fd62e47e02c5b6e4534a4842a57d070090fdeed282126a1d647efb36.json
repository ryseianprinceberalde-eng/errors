{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\errors\\\\src\\\\components\\\\MonitoringPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport GIBSService from '../services/api/gibsService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MonitoringPanel = ({\n  coordinates\n}) => {\n  _s();\n  const [selectedLayer, setSelectedLayer] = useState('clouds');\n  const [cloudCoverage, setCloudCoverage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const gibsService = new GIBSService();\n\n  // Function to determine if it's daytime at the given coordinates\n  const isDaytime = useCallback(() => {\n    if (!(coordinates !== null && coordinates !== void 0 && coordinates.lon)) return true;\n    const date = new Date();\n    const hours = date.getUTCHours() + coordinates.lon / 15; // Approximate local time\n    return hours >= 6 && hours < 18; // Consider 6 AM to 6 PM as daytime\n  }, [coordinates]);\n\n  // Update layer based on time of day\n  useEffect(() => {\n    const newLayer = isDaytime() ? 'clouds' : 'cloudNight';\n    setSelectedLayer(newLayer);\n  }, [isDaytime]);\n\n  // Fetch cloud coverage data\n  useEffect(() => {\n    const fetchCloudData = async () => {\n      if (!(coordinates !== null && coordinates !== void 0 && coordinates.lat) || !(coordinates !== null && coordinates !== void 0 && coordinates.lon)) return;\n      setLoading(true);\n      setError(null);\n      try {\n        const layerInfo = gibsService.getLayerInfo(selectedLayer);\n        if (!layerInfo) {\n          throw new Error('Cloud layer information not available');\n        }\n        const isAvailable = await gibsService.isLayerAvailable(selectedLayer);\n        if (!isAvailable) {\n          throw new Error('Cloud data not available for the selected time');\n        }\n\n        // Set the cloud coverage data\n        setCloudCoverage({\n          layer: selectedLayer,\n          title: layerInfo.title,\n          description: layerInfo.description,\n          time: new Date().toISOString()\n        });\n      } catch (err) {\n        console.error('Error fetching cloud data:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCloudData();\n  }, [coordinates, selectedLayer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-lg p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-semibold mb-4\",\n      children: \"Weather Monitoring\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), !(coordinates !== null && coordinates !== void 0 && coordinates.lat) || !(coordinates !== null && coordinates !== void 0 && coordinates.lon) ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"Select a location to view weather monitoring data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-md font-medium mb-2\",\n          children: \"Selected Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600\",\n          children: [\"Latitude: \", coordinates.lat.toFixed(4), \"\\xB0\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 54\n          }, this), \"Longitude: \", coordinates.lon.toFixed(4), \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mt-2\",\n          children: \"Loading weather data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-50 border border-red-200 rounded p-3 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-red-600\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), cloudCoverage && !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-md font-medium mb-2\",\n            children: cloudCoverage.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600\",\n            children: cloudCoverage.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last updated: \", new Date(cloudCoverage.time).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(MonitoringPanel, \"Pjg3WeiRtRSAcTlDq+oNCeSBM3A=\");\n_c = MonitoringPanel;\nexport default MonitoringPanel;\nvar _c;\n$RefreshReg$(_c, \"MonitoringPanel\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","GIBSService","jsxDEV","_jsxDEV","Fragment","_Fragment","MonitoringPanel","coordinates","_s","selectedLayer","setSelectedLayer","cloudCoverage","setCloudCoverage","loading","setLoading","error","setError","gibsService","isDaytime","lon","date","Date","hours","getUTCHours","newLayer","fetchCloudData","lat","layerInfo","getLayerInfo","Error","isAvailable","isLayerAvailable","layer","title","description","time","toISOString","err","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","toLocaleString","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/errors/src/components/MonitoringPanel.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport GIBSService from '../services/api/gibsService';\r\n\r\nconst MonitoringPanel = ({ coordinates }) => {\r\n  const [selectedLayer, setSelectedLayer] = useState('clouds');\r\n  const [cloudCoverage, setCloudCoverage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const gibsService = new GIBSService();\r\n\r\n  // Function to determine if it's daytime at the given coordinates\r\n  const isDaytime = useCallback(() => {\r\n    if (!coordinates?.lon) return true;\r\n    \r\n    const date = new Date();\r\n    const hours = date.getUTCHours() + (coordinates.lon / 15); // Approximate local time\r\n    return hours >= 6 && hours < 18; // Consider 6 AM to 6 PM as daytime\r\n  }, [coordinates]);\r\n\r\n  // Update layer based on time of day\r\n  useEffect(() => {\r\n    const newLayer = isDaytime() ? 'clouds' : 'cloudNight';\r\n    setSelectedLayer(newLayer);\r\n  }, [isDaytime]);\r\n\r\n  // Fetch cloud coverage data\r\n  useEffect(() => {\r\n    const fetchCloudData = async () => {\r\n      if (!coordinates?.lat || !coordinates?.lon) return;\r\n\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const layerInfo = gibsService.getLayerInfo(selectedLayer);\r\n        if (!layerInfo) {\r\n          throw new Error('Cloud layer information not available');\r\n        }\r\n\r\n        const isAvailable = await gibsService.isLayerAvailable(selectedLayer);\r\n        if (!isAvailable) {\r\n          throw new Error('Cloud data not available for the selected time');\r\n        }\r\n\r\n        // Set the cloud coverage data\r\n        setCloudCoverage({\r\n          layer: selectedLayer,\r\n          title: layerInfo.title,\r\n          description: layerInfo.description,\r\n          time: new Date().toISOString()\r\n        });\r\n      } catch (err) {\r\n        console.error('Error fetching cloud data:', err);\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCloudData();\r\n  }, [coordinates, selectedLayer]);\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-lg p-4\">\r\n      <h2 className=\"text-lg font-semibold mb-4\">Weather Monitoring</h2>\r\n      \r\n      {!coordinates?.lat || !coordinates?.lon ? (\r\n        <p className=\"text-gray-500\">Select a location to view weather monitoring data</p>\r\n      ) : (\r\n        <>\r\n          <div className=\"mb-4\">\r\n            <h3 className=\"text-md font-medium mb-2\">Selected Location</h3>\r\n            <p className=\"text-sm text-gray-600\">\r\n              Latitude: {coordinates.lat.toFixed(4)}°<br />\r\n              Longitude: {coordinates.lon.toFixed(4)}°\r\n            </p>\r\n          </div>\r\n\r\n          {loading && (\r\n            <div className=\"text-center py-4\">\r\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto\"></div>\r\n              <p className=\"text-sm text-gray-500 mt-2\">Loading weather data...</p>\r\n            </div>\r\n          )}\r\n\r\n          {error && (\r\n            <div className=\"bg-red-50 border border-red-200 rounded p-3 mb-4\">\r\n              <p className=\"text-sm text-red-600\">{error}</p>\r\n            </div>\r\n          )}\r\n\r\n          {cloudCoverage && !loading && !error && (\r\n            <div>\r\n              <div className=\"mb-4\">\r\n                <h3 className=\"text-md font-medium mb-2\">{cloudCoverage.title}</h3>\r\n                <p className=\"text-sm text-gray-600\">{cloudCoverage.description}</p>\r\n              </div>\r\n\r\n              <div className=\"text-sm text-gray-500\">\r\n                <p>Last updated: {new Date(cloudCoverage.time).toLocaleString()}</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonitoringPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}