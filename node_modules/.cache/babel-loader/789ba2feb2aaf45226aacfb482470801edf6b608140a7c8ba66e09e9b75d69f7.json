{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\errors\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ArrowLeft, Search, MapPin, Calendar, Download, Thermometer, Droplets, Wind, Sun, AlertTriangle, TrendingUp, BarChart3, Navigation } from 'lucide-react';\nimport WeatherMap from './WeatherMap';\nimport ResultsDisplay from './ResultsDisplay';\nimport { weatherService, GeocodeService } from '../services';\nimport { weatherCalculations } from '../utils/weatherCalculations';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [location, setLocation] = useState('');\n  const [coordinates, setCoordinates] = useState({\n    lat: null,\n    lon: null\n  });\n  const [selectedDate, setSelectedDate] = useState('');\n  const [dateRange, setDateRange] = useState({\n    start: '',\n    end: ''\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [searchHistory, setSearchHistory] = useState([]);\n  const [activeTab, setActiveTab] = useState('search');\n\n  // Initialize with current date and load search history\n  useEffect(() => {\n    const today = new Date().toISOString().split('T')[0];\n    setSelectedDate(today);\n\n    // Load search history from localStorage\n    const savedHistory = localStorage.getItem('weatherSearchHistory');\n    if (savedHistory) {\n      setSearchHistory(JSON.parse(savedHistory));\n    }\n  }, []);\n\n  // Comprehensive location database\n  const locationDatabase = [\n  // Major Cities\n  {\n    name: 'New York',\n    country: 'United States',\n    lat: 40.7128,\n    lon: -74.0060,\n    type: 'city'\n  }, {\n    name: 'London',\n    country: 'United Kingdom',\n    lat: 51.5074,\n    lon: -0.1278,\n    type: 'city'\n  }, {\n    name: 'Tokyo',\n    country: 'Japan',\n    lat: 35.6762,\n    lon: 139.6503,\n    type: 'city'\n  }, {\n    name: 'Paris',\n    country: 'France',\n    lat: 48.8566,\n    lon: 2.3522,\n    type: 'city'\n  }, {\n    name: 'Sydney',\n    country: 'Australia',\n    lat: -33.8688,\n    lon: 151.2093,\n    type: 'city'\n  }, {\n    name: 'Los Angeles',\n    country: 'United States',\n    lat: 34.0522,\n    lon: -118.2437,\n    type: 'city'\n  }, {\n    name: 'Chicago',\n    country: 'United States',\n    lat: 41.8781,\n    lon: -87.6298,\n    type: 'city'\n  }, {\n    name: 'Miami',\n    country: 'United States',\n    lat: 25.7617,\n    lon: -80.1918,\n    type: 'city'\n  }, {\n    name: 'Berlin',\n    country: 'Germany',\n    lat: 52.5200,\n    lon: 13.4050,\n    type: 'city'\n  }, {\n    name: 'Rome',\n    country: 'Italy',\n    lat: 41.9028,\n    lon: 12.4964,\n    type: 'city'\n  }, {\n    name: 'Madrid',\n    country: 'Spain',\n    lat: 40.4168,\n    lon: -3.7038,\n    type: 'city'\n  }, {\n    name: 'Amsterdam',\n    country: 'Netherlands',\n    lat: 52.3676,\n    lon: 4.9041,\n    type: 'city'\n  }, {\n    name: 'Dubai',\n    country: 'UAE',\n    lat: 25.2048,\n    lon: 55.2708,\n    type: 'city'\n  }, {\n    name: 'Singapore',\n    country: 'Singapore',\n    lat: 1.3521,\n    lon: 103.8198,\n    type: 'city'\n  }, {\n    name: 'Hong Kong',\n    country: 'China',\n    lat: 22.3193,\n    lon: 114.1694,\n    type: 'city'\n  }, {\n    name: 'Mumbai',\n    country: 'India',\n    lat: 19.0760,\n    lon: 72.8777,\n    type: 'city'\n  }, {\n    name: 'Delhi',\n    country: 'India',\n    lat: 28.7041,\n    lon: 77.1025,\n    type: 'city'\n  }, {\n    name: 'Bangkok',\n    country: 'Thailand',\n    lat: 13.7563,\n    lon: 100.5018,\n    type: 'city'\n  }, {\n    name: 'Seoul',\n    country: 'South Korea',\n    lat: 37.5665,\n    lon: 126.9780,\n    type: 'city'\n  }, {\n    name: 'Beijing',\n    country: 'China',\n    lat: 39.9042,\n    lon: 116.4074,\n    type: 'city'\n  }, {\n    name: 'Shanghai',\n    country: 'China',\n    lat: 31.2304,\n    lon: 121.4737,\n    type: 'city'\n  },\n  // Philippines - Major Cities\n  {\n    name: 'Manila',\n    country: 'Philippines',\n    lat: 14.5995,\n    lon: 120.9842,\n    type: 'city'\n  }, {\n    name: 'Quezon City',\n    country: 'Philippines',\n    lat: 14.6760,\n    lon: 121.0437,\n    type: 'city'\n  }, {\n    name: 'Davao City',\n    country: 'Philippines',\n    lat: 7.1907,\n    lon: 125.4553,\n    type: 'city'\n  }, {\n    name: 'Cebu City',\n    country: 'Philippines',\n    lat: 10.3157,\n    lon: 123.8854,\n    type: 'city'\n  }, {\n    name: 'Iloilo City',\n    country: 'Philippines',\n    lat: 10.7202,\n    lon: 122.5621,\n    type: 'city'\n  }, {\n    name: 'Cagayan de Oro',\n    country: 'Philippines',\n    lat: 8.4542,\n    lon: 124.6319,\n    type: 'city'\n  }, {\n    name: 'Zamboanga City',\n    country: 'Philippines',\n    lat: 6.9214,\n    lon: 122.0790,\n    type: 'city'\n  }, {\n    name: 'General Santos',\n    country: 'Philippines',\n    lat: 6.1164,\n    lon: 125.1716,\n    type: 'city'\n  }, {\n    name: 'Baguio City',\n    country: 'Philippines',\n    lat: 16.4023,\n    lon: 120.5960,\n    type: 'city'\n  }, {\n    name: 'Bacolod City',\n    country: 'Philippines',\n    lat: 10.6767,\n    lon: 122.9511,\n    type: 'city'\n  }, {\n    name: 'Tacloban City',\n    country: 'Philippines',\n    lat: 11.2444,\n    lon: 125.0033,\n    type: 'city'\n  }, {\n    name: 'Valencia City',\n    country: 'Philippines',\n    lat: 7.9064,\n    lon: 125.0945,\n    type: 'city'\n  }, {\n    name: 'Toronto',\n    country: 'Canada',\n    lat: 43.6532,\n    lon: -79.3832,\n    type: 'city'\n  }, {\n    name: 'Vancouver',\n    country: 'Canada',\n    lat: 49.2827,\n    lon: -123.1207,\n    type: 'city'\n  }, {\n    name: 'Montreal',\n    country: 'Canada',\n    lat: 45.5017,\n    lon: -73.5673,\n    type: 'city'\n  }, {\n    name: 'Mexico City',\n    country: 'Mexico',\n    lat: 19.4326,\n    lon: -99.1332,\n    type: 'city'\n  }, {\n    name: 'SÃ£o Paulo',\n    country: 'Brazil',\n    lat: -23.5505,\n    lon: -46.6333,\n    type: 'city'\n  }, {\n    name: 'Rio de Janeiro',\n    country: 'Brazil',\n    lat: -22.9068,\n    lon: -43.1729,\n    type: 'city'\n  }, {\n    name: 'Buenos Aires',\n    country: 'Argentina',\n    lat: -34.6118,\n    lon: -58.3960,\n    type: 'city'\n  }, {\n    name: 'Cairo',\n    country: 'Egypt',\n    lat: 30.0444,\n    lon: 31.2357,\n    type: 'city'\n  }, {\n    name: 'Cape Town',\n    country: 'South Africa',\n    lat: -33.9249,\n    lon: 18.4241,\n    type: 'city'\n  }, {\n    name: 'Lagos',\n    country: 'Nigeria',\n    lat: 6.5244,\n    lon: 3.3792,\n    type: 'city'\n  }, {\n    name: 'Nairobi',\n    country: 'Kenya',\n    lat: -1.2921,\n    lon: 36.8219,\n    type: 'city'\n  }, {\n    name: 'Istanbul',\n    country: 'Turkey',\n    lat: 41.0082,\n    lon: 28.9784,\n    type: 'city'\n  }, {\n    name: 'Moscow',\n    country: 'Russia',\n    lat: 55.7558,\n    lon: 37.6176,\n    type: 'city'\n  }, {\n    name: 'St. Petersburg',\n    country: 'Russia',\n    lat: 59.9311,\n    lon: 30.3609,\n    type: 'city'\n  },\n  // US States/Regions\n  {\n    name: 'California',\n    country: 'United States',\n    lat: 36.7783,\n    lon: -119.4179,\n    type: 'state'\n  }, {\n    name: 'Texas',\n    country: 'United States',\n    lat: 31.9686,\n    lon: -99.9018,\n    type: 'state'\n  }, {\n    name: 'Florida',\n    country: 'United States',\n    lat: 27.7663,\n    lon: -82.6404,\n    type: 'state'\n  }, {\n    name: 'New York State',\n    country: 'United States',\n    lat: 42.1657,\n    lon: -74.9481,\n    type: 'state'\n  },\n  // Philippines - Regions\n  {\n    name: 'Luzon',\n    country: 'Philippines',\n    lat: 16.5662,\n    lon: 121.2627,\n    type: 'region'\n  }, {\n    name: 'Visayas',\n    country: 'Philippines',\n    lat: 10.3157,\n    lon: 123.8854,\n    type: 'region'\n  }, {\n    name: 'Mindanao',\n    country: 'Philippines',\n    lat: 8.4542,\n    lon: 124.6319,\n    type: 'region'\n  },\n  // Countries\n  {\n    name: 'United States',\n    country: 'United States',\n    lat: 39.8283,\n    lon: -98.5795,\n    type: 'country'\n  }, {\n    name: 'Canada',\n    country: 'Canada',\n    lat: 56.1304,\n    lon: -106.3468,\n    type: 'country'\n  }, {\n    name: 'United Kingdom',\n    country: 'United Kingdom',\n    lat: 55.3781,\n    lon: -3.4360,\n    type: 'country'\n  }, {\n    name: 'Germany',\n    country: 'Germany',\n    lat: 51.1657,\n    lon: 10.4515,\n    type: 'country'\n  }, {\n    name: 'France',\n    country: 'France',\n    lat: 46.2276,\n    lon: 2.2137,\n    type: 'country'\n  }, {\n    name: 'Italy',\n    country: 'Italy',\n    lat: 41.8719,\n    lon: 12.5674,\n    type: 'country'\n  }, {\n    name: 'Spain',\n    country: 'Spain',\n    lat: 40.4637,\n    lon: -3.7492,\n    type: 'country'\n  }, {\n    name: 'Japan',\n    country: 'Japan',\n    lat: 36.2048,\n    lon: 138.2529,\n    type: 'country'\n  }, {\n    name: 'Australia',\n    country: 'Australia',\n    lat: -25.2744,\n    lon: 133.7751,\n    type: 'country'\n  }, {\n    name: 'India',\n    country: 'India',\n    lat: 20.5937,\n    lon: 78.9629,\n    type: 'country'\n  }, {\n    name: 'China',\n    country: 'China',\n    lat: 35.8617,\n    lon: 104.1954,\n    type: 'country'\n  }, {\n    name: 'Brazil',\n    country: 'Brazil',\n    lat: -14.2350,\n    lon: -51.9253,\n    type: 'country'\n  }, {\n    name: 'Philippines',\n    country: 'Philippines',\n    lat: 12.8797,\n    lon: 121.7740,\n    type: 'country'\n  }];\n\n  // Smart search function with local database\n  const searchLocation = query => {\n    if (!query.trim()) return [];\n    const searchTerm = query.toLowerCase();\n    const matches = locationDatabase.filter(location => location.name.toLowerCase().includes(searchTerm) || location.country.toLowerCase().includes(searchTerm));\n\n    // Sort by relevance: exact matches first, then starts with, then contains\n    return matches.sort((a, b) => {\n      const aName = a.name.toLowerCase();\n      const bName = b.name.toLowerCase();\n      if (aName === searchTerm) return -1;\n      if (bName === searchTerm) return 1;\n      if (aName.startsWith(searchTerm) && !bName.startsWith(searchTerm)) return -1;\n      if (bName.startsWith(searchTerm) && !aName.startsWith(searchTerm)) return 1;\n      return aName.localeCompare(bName);\n    }).slice(0, 8); // Limit to 8 suggestions\n  };\n\n  // Handle input change with suggestions (local DB first, then remote geocode)\n  let geocodeTimer = null;\n  const handleLocationInputChange = value => {\n    setLocation(value);\n    setError('');\n    if (geocodeTimer) clearTimeout(geocodeTimer);\n    if (value.trim().length === 0) {\n      setSuggestions([]);\n      setShowSuggestions(false);\n      return;\n    }\n\n    // Immediate local suggestions\n    const localResults = searchLocation(value);\n    setSuggestions(localResults);\n    setShowSuggestions(true);\n\n    // Debounced remote suggestions (only if local results are few)\n    geocodeTimer = setTimeout(async () => {\n      try {\n        if (localResults.length >= 6) return; // enough local suggestions\n        const remote = await GeocodeService.search(value);\n        if (remote && remote.length > 0) {\n          // merge unique by name\n          const merged = [...localResults];\n          const names = new Set(merged.map(r => r.name));\n          remote.forEach(r => {\n            if (!names.has(r.name)) merged.push(r);\n          });\n          setSuggestions(merged.slice(0, 8));\n          setShowSuggestions(true);\n        }\n      } catch (err) {\n        console.warn('Remote geocode error', err);\n      }\n    }, 350);\n  };\n\n  // Handle suggestion selection\n  const handleSuggestionSelect = async suggestion => {\n    setLocation(suggestion.name);\n    setShowSuggestions(false);\n    setSuggestions([]);\n    // suggestion may come from local DB or remote geocode\n    if (suggestion.lat && suggestion.lon) {\n      setCoordinates({\n        lat: suggestion.lat,\n        lon: suggestion.lon\n      });\n      addToSearchHistory(suggestion);\n      await fetchWeatherData(suggestion.lat, suggestion.lon);\n      return;\n    }\n\n    // If no coords, try a geocode lookup\n    try {\n      const rem = await GeocodeService.search(suggestion.name);\n      if (rem && rem.length > 0) {\n        const best = rem[0];\n        setCoordinates({\n          lat: best.lat,\n          lon: best.lon\n        });\n        addToSearchHistory(best);\n        await fetchWeatherData(best.lat, best.lon);\n        return;\n      }\n    } catch (err) {\n      console.warn('Suggestion geocode failed', err);\n    }\n    setError('Could not resolve location coordinates.');\n  };\n\n  // Add location to search history\n  const addToSearchHistory = location => {\n    const newHistory = [location, ...searchHistory.filter(item => item.name !== location.name)].slice(0, 5);\n    setSearchHistory(newHistory);\n    localStorage.setItem('weatherSearchHistory', JSON.stringify(newHistory));\n  };\n  const handleLocationSearch = async () => {\n    if (!location.trim()) {\n      setError('Please enter a location');\n      return;\n    }\n    setIsLoading(true);\n    setError('');\n    setShowSuggestions(false);\n    try {\n      // First try local database\n      const localMatch = locationDatabase.find(loc => loc.name.toLowerCase() === location.toLowerCase());\n      if (localMatch) {\n        setCoordinates({\n          lat: localMatch.lat,\n          lon: localMatch.lon\n        });\n        addToSearchHistory(localMatch);\n        await fetchWeatherData(localMatch.lat, localMatch.lon);\n        return;\n      }\n\n      // If no local exact match, try fuzzy local then remote geocoding\n      const fuzzyMatches = searchLocation(location);\n      if (fuzzyMatches.length > 0) {\n        const bestMatch = fuzzyMatches[0];\n        setCoordinates({\n          lat: bestMatch.lat,\n          lon: bestMatch.lon\n        });\n        setLocation(bestMatch.name);\n        addToSearchHistory(bestMatch);\n        await fetchWeatherData(bestMatch.lat, bestMatch.lon);\n        return;\n      }\n\n      // Remote geocode fallback\n      const remote = await GeocodeService.search(location);\n      if (remote && remote.length > 0) {\n        const best = remote[0];\n        setCoordinates({\n          lat: best.lat,\n          lon: best.lon\n        });\n        setLocation(best.name);\n        addToSearchHistory(best);\n        await fetchWeatherData(best.lat, best.lon);\n        return;\n      }\n      setError('Location not found. Try searching for a major city, state, or country.');\n      setError('Unable to find location. Please try a different search term.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const getSampleCoordinates = locationName => {\n    const cities = {\n      'new york': {\n        lat: 40.7128,\n        lon: -74.0060\n      },\n      'london': {\n        lat: 51.5074,\n        lon: -0.1278\n      },\n      'tokyo': {\n        lat: 35.6762,\n        lon: 139.6503\n      },\n      'paris': {\n        lat: 48.8566,\n        lon: 2.3522\n      },\n      'sydney': {\n        lat: -33.8688,\n        lon: 151.2093\n      },\n      'los angeles': {\n        lat: 34.0522,\n        lon: -118.2437\n      },\n      'chicago': {\n        lat: 41.8781,\n        lon: -87.6298\n      },\n      'miami': {\n        lat: 25.7617,\n        lon: -80.1918\n      }\n    };\n    const key = locationName.toLowerCase();\n    return cities[key] || null;\n  };\n  const handleCurrentLocation = () => {\n    if (!navigator.geolocation) {\n      setError('Geolocation is not supported by this browser.');\n      return;\n    }\n    setIsLoading(true);\n    setError('');\n    navigator.geolocation.getCurrentPosition(async position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setCoordinates({\n        lat: latitude,\n        lon: longitude\n      });\n      setLocation(`${latitude.toFixed(4)}, ${longitude.toFixed(4)}`);\n      await fetchWeatherData(latitude, longitude);\n    }, error => {\n      setIsLoading(false);\n      switch (error.code) {\n        case error.PERMISSION_DENIED:\n          setError('Location access denied. Please enable location permissions and try again.');\n          break;\n        case error.POSITION_UNAVAILABLE:\n          setError('Location information is unavailable.');\n          break;\n        case error.TIMEOUT:\n          setError('Location request timed out. Please try again.');\n          break;\n        default:\n          setError('An unknown error occurred while retrieving location.');\n          break;\n      }\n    }, {\n      enableHighAccuracy: true,\n      timeout: 10000,\n      maximumAge: 300000 // 5 minutes\n    });\n  };\n  const handleCoordinateInput = async (lat, lon) => {\n    if (lat && lon) {\n      setCoordinates({\n        lat,\n        lon\n      });\n      await fetchWeatherData(lat, lon);\n    }\n  };\n  const fetchWeatherData = async (lat, lon) => {\n    setIsLoading(true);\n    setError('');\n    try {\n      const targetDate = selectedDate || new Date().toISOString().split('T')[0];\n\n      // Fetch historical data from NASA APIs\n      const weatherData = await weatherService.getWeatherAnalysis(lat, lon, targetDate);\n\n      // Calculate probabilities\n      const probabilities = weatherCalculations.calculateProbabilities(weatherData, targetDate);\n      setResults({\n        location: {\n          lat,\n          lon\n        },\n        date: targetDate,\n        probabilities,\n        historicalData: weatherData,\n        summary: generateSummary(probabilities)\n      });\n    } catch (err) {\n      setError('Failed to fetch weather data. Please try again.');\n      console.error('Weather data fetch error:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const generateSummary = probabilities => {\n    const conditions = [];\n    if (probabilities.hot > 50) conditions.push(`${probabilities.hot}% chance of hot weather`);\n    if (probabilities.cold > 50) conditions.push(`${probabilities.cold}% chance of cold weather`);\n    if (probabilities.wet > 50) conditions.push(`${probabilities.wet}% chance of rain`);\n    if (probabilities.windy > 50) conditions.push(`${probabilities.windy}% chance of windy conditions`);\n    if (probabilities.uncomfortable > 50) conditions.push(`${probabilities.uncomfortable}% chance of uncomfortable heat`);\n    if (conditions.length === 0) {\n      return \"Weather conditions are expected to be moderate with no extreme conditions likely.\";\n    }\n    return `Based on historical data: ${conditions.join(', ')}.`;\n  };\n  const handleExportData = () => {\n    if (!results) return;\n    const exportData = {\n      location: results.location,\n      date: results.date,\n      probabilities: results.probabilities,\n      summary: results.summary,\n      exportedAt: new Date().toISOString(),\n      dataSource: 'NASA POWER, GPM IMERG, MERRA-2'\n    };\n\n    // Export as JSON\n    const dataStr = JSON.stringify(exportData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const exportFileDefaultName = `weather-probability-${results.date}.json`;\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-white shadow-sm border-b\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto px-6 py-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navigate('/'),\n              className: \"flex items-center space-x-2 text-gray-600 hover:text-gray-900 transition-colors\",\n              children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n                className: \"h-5 w-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Back to Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h-6 w-px bg-gray-300\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-2xl font-bold text-gray-900\",\n              children: \"Weather Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navigate('/storm-tracker'),\n              className: \"btn-secondary inline-flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Storm Tracker\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 15\n            }, this), results && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleExportData,\n              className: \"btn-secondary inline-flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(Download, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Export Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto px-6 py-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid lg:grid-cols-3 gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:col-span-1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card sticky top-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold text-gray-900 mb-6\",\n              children: \"Location & Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-1 mb-6 bg-gray-100 rounded-lg p-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setActiveTab('search'),\n                className: `flex-1 py-2 px-3 rounded-md text-sm font-medium transition-colors ${activeTab === 'search' ? 'bg-white text-primary-600 shadow-sm' : 'text-gray-600 hover:text-gray-900'}`,\n                children: [/*#__PURE__*/_jsxDEV(Search, {\n                  className: \"h-4 w-4 inline mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 19\n                }, this), \"Search\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setActiveTab('coordinates'),\n                className: `flex-1 py-2 px-3 rounded-md text-sm font-medium transition-colors ${activeTab === 'coordinates' ? 'bg-white text-primary-600 shadow-sm' : 'text-gray-600 hover:text-gray-900'}`,\n                children: [/*#__PURE__*/_jsxDEV(MapPin, {\n                  className: \"h-4 w-4 inline mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 19\n                }, this), \"Coordinates\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, this), activeTab === 'search' ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"Search for a location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relative mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex space-x-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"relative flex-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: location,\n                      onChange: e => handleLocationInputChange(e.target.value),\n                      onFocus: () => {\n                        if (suggestions.length > 0) setShowSuggestions(true);\n                      },\n                      onBlur: () => {\n                        // Delay hiding suggestions to allow clicks\n                        setTimeout(() => setShowSuggestions(false), 150);\n                      },\n                      placeholder: \"Search cities, states, or countries...\",\n                      className: \"input-field pr-10 shadow-lg border-2 border-gray-200 focus:border-primary-500 focus:shadow-xl transition-all duration-200\",\n                      onKeyPress: e => {\n                        if (e.key === 'Enter') {\n                          handleLocationSearch();\n                          setShowSuggestions(false);\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 497,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Search, {\n                      className: \"absolute right-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 517,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleLocationSearch,\n                    disabled: isLoading,\n                    className: \"btn-primary px-6 shadow-lg\",\n                    children: \"Search\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 519,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 21\n                }, this), showSuggestions && (suggestions.length > 0 || searchHistory.length > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"absolute top-full left-0 right-0 bg-white border border-gray-200 rounded-lg shadow-2xl z-50 mt-1 max-h-80 overflow-y-auto\",\n                  children: [searchHistory.length > 0 && suggestions.length === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"px-4 py-2 text-xs font-medium text-gray-500 bg-gray-50 border-b\",\n                      children: \"Recent searches\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 534,\n                      columnNumber: 29\n                    }, this), searchHistory.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleSuggestionSelect(item),\n                      className: \"w-full px-4 py-3 text-left hover:bg-gray-50 flex items-center space-x-3 border-b border-gray-100 last:border-b-0\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"w-6 h-6 bg-gray-100 rounded-full flex items-center justify-center\",\n                        children: /*#__PURE__*/_jsxDEV(MapPin, {\n                          className: \"h-3 w-3 text-gray-500\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 544,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 543,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex-1\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"font-medium text-gray-900\",\n                          children: item.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 547,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-sm text-gray-500\",\n                          children: item.country\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 548,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 546,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-xs text-gray-400 capitalize\",\n                        children: item.type\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 550,\n                        columnNumber: 33\n                      }, this)]\n                    }, `history-${index}`, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 538,\n                      columnNumber: 31\n                    }, this))]\n                  }, void 0, true), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [suggestions.length > 0 && searchHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"px-4 py-2 text-xs font-medium text-gray-500 bg-gray-50 border-b\",\n                      children: \"Suggestions\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 560,\n                      columnNumber: 31\n                    }, this), suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleSuggestionSelect(suggestion),\n                      className: \"w-full px-4 py-3 text-left hover:bg-primary-50 flex items-center space-x-3 border-b border-gray-100 last:border-b-0 group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"w-6 h-6 bg-primary-100 rounded-full flex items-center justify-center group-hover:bg-primary-200\",\n                        children: /*#__PURE__*/_jsxDEV(MapPin, {\n                          className: \"h-3 w-3 text-primary-600\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 571,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 570,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex-1\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"font-medium text-gray-900\",\n                          children: suggestion.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 574,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-sm text-gray-500\",\n                          children: suggestion.country\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 575,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 573,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-xs text-primary-600 capitalize font-medium\",\n                        children: suggestion.type\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 577,\n                        columnNumber: 33\n                      }, this)]\n                    }, `suggestion-${index}`, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 565,\n                      columnNumber: 31\n                    }, this))]\n                  }, void 0, true)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleCurrentLocation,\n                disabled: isLoading,\n                className: \"w-full flex items-center justify-center space-x-2 py-3 px-4 border-2 border-primary-300 text-primary-600 rounded-lg hover:bg-primary-50 hover:border-primary-400 transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed shadow-sm\",\n                children: [/*#__PURE__*/_jsxDEV(Navigation, {\n                  className: \"h-4 w-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: \"Use Current Location\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-6 space-y-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-700 mb-2\",\n                  children: \"Latitude\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 599,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  step: \"any\",\n                  placeholder: \"e.g., 40.7128\",\n                  className: \"input-field\",\n                  onChange: e => {\n                    const lat = parseFloat(e.target.value);\n                    if (!isNaN(lat) && coordinates.lon) {\n                      handleCoordinateInput(lat, coordinates.lon);\n                    }\n                    setCoordinates(prev => ({\n                      ...prev,\n                      lat\n                    }));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 602,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-700 mb-2\",\n                  children: \"Longitude\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  step: \"any\",\n                  placeholder: \"e.g., -74.0060\",\n                  className: \"input-field\",\n                  onChange: e => {\n                    const lon = parseFloat(e.target.value);\n                    if (!isNaN(lon) && coordinates.lat) {\n                      handleCoordinateInput(coordinates.lat, lon);\n                    }\n                    setCoordinates(prev => ({\n                      ...prev,\n                      lon\n                    }));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 620,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                  className: \"h-4 w-4 inline mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 19\n                }, this), \"Target Date\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: selectedDate,\n                onChange: e => setSelectedDate(e.target.value),\n                className: \"input-field\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 15\n            }, this), coordinates.lat && coordinates.lon && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-6 p-4 bg-primary-50 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-sm font-medium text-primary-900 mb-2\",\n                children: \"Current Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 654,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-primary-700\",\n                children: [\"Lat: \", coordinates.lat.toFixed(4), \", Lon: \", coordinates.lon.toFixed(4)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 17\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n                  className: \"h-5 w-5 text-red-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 665,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-red-700\",\n                  children: error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 666,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 17\n            }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center py-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600 mx-auto mb-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600\",\n                children: \"Analyzing weather data...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 675,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:col-span-2\",\n          children: results ? /*#__PURE__*/_jsxDEV(ResultsDisplay, {\n            results: results\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card text-center py-16\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(BarChart3, {\n                className: \"h-16 w-16 text-gray-300 mx-auto mb-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-xl font-semibold text-gray-900 mb-2\",\n                children: \"Ready to Analyze Weather Patterns\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-600 max-w-md mx-auto\",\n                children: \"Enter a location and date to get started with weather probability predictions based on 30+ years of NASA satellite data.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-2 md:grid-cols-5 gap-4 max-w-2xl mx-auto\",\n              children: [{\n                icon: Thermometer,\n                label: 'Hot Weather',\n                color: 'text-red-500'\n              }, {\n                icon: Thermometer,\n                label: 'Cold Weather',\n                color: 'text-blue-500'\n              }, {\n                icon: Droplets,\n                label: 'Rainfall',\n                color: 'text-blue-600'\n              }, {\n                icon: Wind,\n                label: 'Windy',\n                color: 'text-gray-600'\n              }, {\n                icon: Sun,\n                label: 'Heat Index',\n                color: 'text-orange-500'\n              }].map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(item.icon, {\n                  className: `h-8 w-8 ${item.color} mx-auto mb-2`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 707,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-xs text-gray-500\",\n                  children: item.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 708,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 706,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this), coordinates.lat && coordinates.lon && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold text-gray-900 mb-4\",\n            children: \"Location Map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(WeatherMap, {\n            coordinates: coordinates,\n            onLocationSelect: (lat, lon) => handleCoordinateInput(lat, lon)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 413,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"T0eNo+1GoMz+PoKd7HlQMClIQNQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","ArrowLeft","Search","MapPin","Calendar","Download","Thermometer","Droplets","Wind","Sun","AlertTriangle","TrendingUp","BarChart3","Navigation","WeatherMap","ResultsDisplay","weatherService","GeocodeService","weatherCalculations","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","navigate","location","setLocation","coordinates","setCoordinates","lat","lon","selectedDate","setSelectedDate","dateRange","setDateRange","start","end","isLoading","setIsLoading","results","setResults","error","setError","suggestions","setSuggestions","showSuggestions","setShowSuggestions","searchHistory","setSearchHistory","activeTab","setActiveTab","today","Date","toISOString","split","savedHistory","localStorage","getItem","JSON","parse","locationDatabase","name","country","type","searchLocation","query","trim","searchTerm","toLowerCase","matches","filter","includes","sort","a","b","aName","bName","startsWith","localeCompare","slice","geocodeTimer","handleLocationInputChange","value","clearTimeout","length","localResults","setTimeout","remote","search","merged","names","Set","map","r","forEach","has","push","err","console","warn","handleSuggestionSelect","suggestion","addToSearchHistory","fetchWeatherData","rem","best","newHistory","item","setItem","stringify","handleLocationSearch","localMatch","find","loc","fuzzyMatches","bestMatch","getSampleCoordinates","locationName","cities","key","handleCurrentLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","toFixed","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","enableHighAccuracy","timeout","maximumAge","handleCoordinateInput","targetDate","weatherData","getWeatherAnalysis","probabilities","calculateProbabilities","date","historicalData","summary","generateSummary","conditions","hot","cold","wet","windy","uncomfortable","join","handleExportData","exportData","exportedAt","dataSource","dataStr","dataUri","encodeURIComponent","exportFileDefaultName","linkElement","document","createElement","setAttribute","click","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","onFocus","onBlur","placeholder","onKeyPress","disabled","index","step","parseFloat","isNaN","prev","icon","label","color","onLocationSelect","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/errors/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { \n  ArrowLeft, \n  Search, \n  MapPin, \n  Calendar, \n  Download,\n  Thermometer,\n  Droplets,\n  Wind,\n  Sun,\n  AlertTriangle,\n  TrendingUp,\n  BarChart3,\n  Navigation\n} from 'lucide-react';\nimport WeatherMap from './WeatherMap';\nimport ResultsDisplay from './ResultsDisplay';\nimport { weatherService, GeocodeService } from '../services';\nimport { weatherCalculations } from '../utils/weatherCalculations';\n\nconst Dashboard = () => {\n  const navigate = useNavigate();\n  const [location, setLocation] = useState('');\n  const [coordinates, setCoordinates] = useState({ lat: null, lon: null });\n  const [selectedDate, setSelectedDate] = useState('');\n  const [dateRange, setDateRange] = useState({ start: '', end: '' });\n  const [isLoading, setIsLoading] = useState(false);\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [searchHistory, setSearchHistory] = useState([]);\n  const [activeTab, setActiveTab] = useState('search');\n\n  // Initialize with current date and load search history\n  useEffect(() => {\n    const today = new Date().toISOString().split('T')[0];\n    setSelectedDate(today);\n    \n    // Load search history from localStorage\n    const savedHistory = localStorage.getItem('weatherSearchHistory');\n    if (savedHistory) {\n      setSearchHistory(JSON.parse(savedHistory));\n    }\n  }, []);\n\n  // Comprehensive location database\n  const locationDatabase = [\n    // Major Cities\n    { name: 'New York', country: 'United States', lat: 40.7128, lon: -74.0060, type: 'city' },\n    { name: 'London', country: 'United Kingdom', lat: 51.5074, lon: -0.1278, type: 'city' },\n    { name: 'Tokyo', country: 'Japan', lat: 35.6762, lon: 139.6503, type: 'city' },\n    { name: 'Paris', country: 'France', lat: 48.8566, lon: 2.3522, type: 'city' },\n    { name: 'Sydney', country: 'Australia', lat: -33.8688, lon: 151.2093, type: 'city' },\n    { name: 'Los Angeles', country: 'United States', lat: 34.0522, lon: -118.2437, type: 'city' },\n    { name: 'Chicago', country: 'United States', lat: 41.8781, lon: -87.6298, type: 'city' },\n    { name: 'Miami', country: 'United States', lat: 25.7617, lon: -80.1918, type: 'city' },\n    { name: 'Berlin', country: 'Germany', lat: 52.5200, lon: 13.4050, type: 'city' },\n    { name: 'Rome', country: 'Italy', lat: 41.9028, lon: 12.4964, type: 'city' },\n    { name: 'Madrid', country: 'Spain', lat: 40.4168, lon: -3.7038, type: 'city' },\n    { name: 'Amsterdam', country: 'Netherlands', lat: 52.3676, lon: 4.9041, type: 'city' },\n    { name: 'Dubai', country: 'UAE', lat: 25.2048, lon: 55.2708, type: 'city' },\n    { name: 'Singapore', country: 'Singapore', lat: 1.3521, lon: 103.8198, type: 'city' },\n    { name: 'Hong Kong', country: 'China', lat: 22.3193, lon: 114.1694, type: 'city' },\n    { name: 'Mumbai', country: 'India', lat: 19.0760, lon: 72.8777, type: 'city' },\n    { name: 'Delhi', country: 'India', lat: 28.7041, lon: 77.1025, type: 'city' },\n    { name: 'Bangkok', country: 'Thailand', lat: 13.7563, lon: 100.5018, type: 'city' },\n    { name: 'Seoul', country: 'South Korea', lat: 37.5665, lon: 126.9780, type: 'city' },\n    { name: 'Beijing', country: 'China', lat: 39.9042, lon: 116.4074, type: 'city' },\n    { name: 'Shanghai', country: 'China', lat: 31.2304, lon: 121.4737, type: 'city' },\n    \n    // Philippines - Major Cities\n    { name: 'Manila', country: 'Philippines', lat: 14.5995, lon: 120.9842, type: 'city' },\n    { name: 'Quezon City', country: 'Philippines', lat: 14.6760, lon: 121.0437, type: 'city' },\n    { name: 'Davao City', country: 'Philippines', lat: 7.1907, lon: 125.4553, type: 'city' },\n    { name: 'Cebu City', country: 'Philippines', lat: 10.3157, lon: 123.8854, type: 'city' },\n    { name: 'Iloilo City', country: 'Philippines', lat: 10.7202, lon: 122.5621, type: 'city' },\n    { name: 'Cagayan de Oro', country: 'Philippines', lat: 8.4542, lon: 124.6319, type: 'city' },\n    { name: 'Zamboanga City', country: 'Philippines', lat: 6.9214, lon: 122.0790, type: 'city' },\n    { name: 'General Santos', country: 'Philippines', lat: 6.1164, lon: 125.1716, type: 'city' },\n    { name: 'Baguio City', country: 'Philippines', lat: 16.4023, lon: 120.5960, type: 'city' },\n    { name: 'Bacolod City', country: 'Philippines', lat: 10.6767, lon: 122.9511, type: 'city' },\n    { name: 'Tacloban City', country: 'Philippines', lat: 11.2444, lon: 125.0033, type: 'city' },\n    { name: 'Valencia City', country: 'Philippines', lat: 7.9064, lon: 125.0945, type: 'city' },\n    { name: 'Toronto', country: 'Canada', lat: 43.6532, lon: -79.3832, type: 'city' },\n    { name: 'Vancouver', country: 'Canada', lat: 49.2827, lon: -123.1207, type: 'city' },\n    { name: 'Montreal', country: 'Canada', lat: 45.5017, lon: -73.5673, type: 'city' },\n    { name: 'Mexico City', country: 'Mexico', lat: 19.4326, lon: -99.1332, type: 'city' },\n    { name: 'SÃ£o Paulo', country: 'Brazil', lat: -23.5505, lon: -46.6333, type: 'city' },\n    { name: 'Rio de Janeiro', country: 'Brazil', lat: -22.9068, lon: -43.1729, type: 'city' },\n    { name: 'Buenos Aires', country: 'Argentina', lat: -34.6118, lon: -58.3960, type: 'city' },\n    { name: 'Cairo', country: 'Egypt', lat: 30.0444, lon: 31.2357, type: 'city' },\n    { name: 'Cape Town', country: 'South Africa', lat: -33.9249, lon: 18.4241, type: 'city' },\n    { name: 'Lagos', country: 'Nigeria', lat: 6.5244, lon: 3.3792, type: 'city' },\n    { name: 'Nairobi', country: 'Kenya', lat: -1.2921, lon: 36.8219, type: 'city' },\n    { name: 'Istanbul', country: 'Turkey', lat: 41.0082, lon: 28.9784, type: 'city' },\n    { name: 'Moscow', country: 'Russia', lat: 55.7558, lon: 37.6176, type: 'city' },\n    { name: 'St. Petersburg', country: 'Russia', lat: 59.9311, lon: 30.3609, type: 'city' },\n    \n    // US States/Regions\n    { name: 'California', country: 'United States', lat: 36.7783, lon: -119.4179, type: 'state' },\n    { name: 'Texas', country: 'United States', lat: 31.9686, lon: -99.9018, type: 'state' },\n    { name: 'Florida', country: 'United States', lat: 27.7663, lon: -82.6404, type: 'state' },\n    { name: 'New York State', country: 'United States', lat: 42.1657, lon: -74.9481, type: 'state' },\n    \n    // Philippines - Regions\n    { name: 'Luzon', country: 'Philippines', lat: 16.5662, lon: 121.2627, type: 'region' },\n    { name: 'Visayas', country: 'Philippines', lat: 10.3157, lon: 123.8854, type: 'region' },\n    { name: 'Mindanao', country: 'Philippines', lat: 8.4542, lon: 124.6319, type: 'region' },\n    \n    // Countries\n    { name: 'United States', country: 'United States', lat: 39.8283, lon: -98.5795, type: 'country' },\n    { name: 'Canada', country: 'Canada', lat: 56.1304, lon: -106.3468, type: 'country' },\n    { name: 'United Kingdom', country: 'United Kingdom', lat: 55.3781, lon: -3.4360, type: 'country' },\n    { name: 'Germany', country: 'Germany', lat: 51.1657, lon: 10.4515, type: 'country' },\n    { name: 'France', country: 'France', lat: 46.2276, lon: 2.2137, type: 'country' },\n    { name: 'Italy', country: 'Italy', lat: 41.8719, lon: 12.5674, type: 'country' },\n    { name: 'Spain', country: 'Spain', lat: 40.4637, lon: -3.7492, type: 'country' },\n    { name: 'Japan', country: 'Japan', lat: 36.2048, lon: 138.2529, type: 'country' },\n    { name: 'Australia', country: 'Australia', lat: -25.2744, lon: 133.7751, type: 'country' },\n    { name: 'India', country: 'India', lat: 20.5937, lon: 78.9629, type: 'country' },\n    { name: 'China', country: 'China', lat: 35.8617, lon: 104.1954, type: 'country' },\n    { name: 'Brazil', country: 'Brazil', lat: -14.2350, lon: -51.9253, type: 'country' },\n    { name: 'Philippines', country: 'Philippines', lat: 12.8797, lon: 121.7740, type: 'country' }\n  ];\n\n  // Smart search function with local database\n  const searchLocation = (query) => {\n    if (!query.trim()) return [];\n    \n    const searchTerm = query.toLowerCase();\n    const matches = locationDatabase.filter(location => \n      location.name.toLowerCase().includes(searchTerm) ||\n      location.country.toLowerCase().includes(searchTerm)\n    );\n    \n    // Sort by relevance: exact matches first, then starts with, then contains\n    return matches.sort((a, b) => {\n      const aName = a.name.toLowerCase();\n      const bName = b.name.toLowerCase();\n      \n      if (aName === searchTerm) return -1;\n      if (bName === searchTerm) return 1;\n      if (aName.startsWith(searchTerm) && !bName.startsWith(searchTerm)) return -1;\n      if (bName.startsWith(searchTerm) && !aName.startsWith(searchTerm)) return 1;\n      \n      return aName.localeCompare(bName);\n    }).slice(0, 8); // Limit to 8 suggestions\n  };\n\n  // Handle input change with suggestions (local DB first, then remote geocode)\n  let geocodeTimer = null;\n  const handleLocationInputChange = (value) => {\n    setLocation(value);\n    setError('');\n\n    if (geocodeTimer) clearTimeout(geocodeTimer);\n\n    if (value.trim().length === 0) {\n      setSuggestions([]);\n      setShowSuggestions(false);\n      return;\n    }\n\n    // Immediate local suggestions\n    const localResults = searchLocation(value);\n    setSuggestions(localResults);\n    setShowSuggestions(true);\n\n    // Debounced remote suggestions (only if local results are few)\n    geocodeTimer = setTimeout(async () => {\n      try {\n        if (localResults.length >= 6) return; // enough local suggestions\n        const remote = await GeocodeService.search(value);\n        if (remote && remote.length > 0) {\n          // merge unique by name\n          const merged = [...localResults];\n          const names = new Set(merged.map(r => r.name));\n          remote.forEach(r => { if (!names.has(r.name)) merged.push(r); });\n          setSuggestions(merged.slice(0, 8));\n          setShowSuggestions(true);\n        }\n      } catch (err) {\n        console.warn('Remote geocode error', err);\n      }\n    }, 350);\n  };\n\n  // Handle suggestion selection\n  const handleSuggestionSelect = async (suggestion) => {\n    setLocation(suggestion.name);\n    setShowSuggestions(false);\n    setSuggestions([]);\n    // suggestion may come from local DB or remote geocode\n    if (suggestion.lat && suggestion.lon) {\n      setCoordinates({ lat: suggestion.lat, lon: suggestion.lon });\n      addToSearchHistory(suggestion);\n      await fetchWeatherData(suggestion.lat, suggestion.lon);\n      return;\n    }\n\n    // If no coords, try a geocode lookup\n    try {\n      const rem = await GeocodeService.search(suggestion.name);\n      if (rem && rem.length > 0) {\n        const best = rem[0];\n        setCoordinates({ lat: best.lat, lon: best.lon });\n        addToSearchHistory(best);\n        await fetchWeatherData(best.lat, best.lon);\n        return;\n      }\n    } catch (err) {\n      console.warn('Suggestion geocode failed', err);\n    }\n\n    setError('Could not resolve location coordinates.');\n  };\n\n  // Add location to search history\n  const addToSearchHistory = (location) => {\n    const newHistory = [location, ...searchHistory.filter(item => item.name !== location.name)].slice(0, 5);\n    setSearchHistory(newHistory);\n    localStorage.setItem('weatherSearchHistory', JSON.stringify(newHistory));\n  };\n\n  const handleLocationSearch = async () => {\n    if (!location.trim()) {\n      setError('Please enter a location');\n      return;\n    }\n\n    setIsLoading(true);\n    setError('');\n    setShowSuggestions(false);\n\n    try {\n      // First try local database\n      const localMatch = locationDatabase.find(loc => \n        loc.name.toLowerCase() === location.toLowerCase()\n      );\n      \n      if (localMatch) {\n        setCoordinates({ lat: localMatch.lat, lon: localMatch.lon });\n        addToSearchHistory(localMatch);\n        await fetchWeatherData(localMatch.lat, localMatch.lon);\n        return;\n      }\n\n      // If no local exact match, try fuzzy local then remote geocoding\n      const fuzzyMatches = searchLocation(location);\n      if (fuzzyMatches.length > 0) {\n        const bestMatch = fuzzyMatches[0];\n        setCoordinates({ lat: bestMatch.lat, lon: bestMatch.lon });\n        setLocation(bestMatch.name);\n        addToSearchHistory(bestMatch);\n        await fetchWeatherData(bestMatch.lat, bestMatch.lon);\n        return;\n      }\n\n      // Remote geocode fallback\n      const remote = await GeocodeService.search(location);\n      if (remote && remote.length > 0) {\n        const best = remote[0];\n        setCoordinates({ lat: best.lat, lon: best.lon });\n        setLocation(best.name);\n        addToSearchHistory(best);\n        await fetchWeatherData(best.lat, best.lon);\n        return;\n      }\n\n      setError('Location not found. Try searching for a major city, state, or country.');\n      setError('Unable to find location. Please try a different search term.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getSampleCoordinates = (locationName) => {\n    const cities = {\n      'new york': { lat: 40.7128, lon: -74.0060 },\n      'london': { lat: 51.5074, lon: -0.1278 },\n      'tokyo': { lat: 35.6762, lon: 139.6503 },\n      'paris': { lat: 48.8566, lon: 2.3522 },\n      'sydney': { lat: -33.8688, lon: 151.2093 },\n      'los angeles': { lat: 34.0522, lon: -118.2437 },\n      'chicago': { lat: 41.8781, lon: -87.6298 },\n      'miami': { lat: 25.7617, lon: -80.1918 }\n    };\n    \n    const key = locationName.toLowerCase();\n    return cities[key] || null;\n  };\n\n  const handleCurrentLocation = () => {\n    if (!navigator.geolocation) {\n      setError('Geolocation is not supported by this browser.');\n      return;\n    }\n\n    setIsLoading(true);\n    setError('');\n\n    navigator.geolocation.getCurrentPosition(\n      async (position) => {\n        const { latitude, longitude } = position.coords;\n        setCoordinates({ lat: latitude, lon: longitude });\n        setLocation(`${latitude.toFixed(4)}, ${longitude.toFixed(4)}`);\n        await fetchWeatherData(latitude, longitude);\n      },\n      (error) => {\n        setIsLoading(false);\n        switch (error.code) {\n          case error.PERMISSION_DENIED:\n            setError('Location access denied. Please enable location permissions and try again.');\n            break;\n          case error.POSITION_UNAVAILABLE:\n            setError('Location information is unavailable.');\n            break;\n          case error.TIMEOUT:\n            setError('Location request timed out. Please try again.');\n            break;\n          default:\n            setError('An unknown error occurred while retrieving location.');\n            break;\n        }\n      },\n      {\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 300000 // 5 minutes\n      }\n    );\n  };\n\n  const handleCoordinateInput = async (lat, lon) => {\n    if (lat && lon) {\n      setCoordinates({ lat, lon });\n      await fetchWeatherData(lat, lon);\n    }\n  };\n\n  const fetchWeatherData = async (lat, lon) => {\n    setIsLoading(true);\n    setError('');\n\n    try {\n      const targetDate = selectedDate || new Date().toISOString().split('T')[0];\n      \n      // Fetch historical data from NASA APIs\n      const weatherData = await weatherService.getWeatherAnalysis(lat, lon, targetDate);\n      \n      // Calculate probabilities\n      const probabilities = weatherCalculations.calculateProbabilities(weatherData, targetDate);\n      \n      setResults({\n        location: { lat, lon },\n        date: targetDate,\n        probabilities,\n        historicalData: weatherData,\n        summary: generateSummary(probabilities)\n      });\n    } catch (err) {\n      setError('Failed to fetch weather data. Please try again.');\n      console.error('Weather data fetch error:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const generateSummary = (probabilities) => {\n    const conditions = [];\n    \n    if (probabilities.hot > 50) conditions.push(`${probabilities.hot}% chance of hot weather`);\n    if (probabilities.cold > 50) conditions.push(`${probabilities.cold}% chance of cold weather`);\n    if (probabilities.wet > 50) conditions.push(`${probabilities.wet}% chance of rain`);\n    if (probabilities.windy > 50) conditions.push(`${probabilities.windy}% chance of windy conditions`);\n    if (probabilities.uncomfortable > 50) conditions.push(`${probabilities.uncomfortable}% chance of uncomfortable heat`);\n    \n    if (conditions.length === 0) {\n      return \"Weather conditions are expected to be moderate with no extreme conditions likely.\";\n    }\n    \n    return `Based on historical data: ${conditions.join(', ')}.`;\n  };\n\n  const handleExportData = () => {\n    if (!results) return;\n\n    const exportData = {\n      location: results.location,\n      date: results.date,\n      probabilities: results.probabilities,\n      summary: results.summary,\n      exportedAt: new Date().toISOString(),\n      dataSource: 'NASA POWER, GPM IMERG, MERRA-2'\n    };\n\n    // Export as JSON\n    const dataStr = JSON.stringify(exportData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n    \n    const exportFileDefaultName = `weather-probability-${results.date}.json`;\n    \n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <button \n                onClick={() => navigate('/')}\n                className=\"flex items-center space-x-2 text-gray-600 hover:text-gray-900 transition-colors\"\n              >\n                <ArrowLeft className=\"h-5 w-5\" />\n                <span>Back to Home</span>\n              </button>\n              <div className=\"h-6 w-px bg-gray-300\"></div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">Weather Dashboard</h1>\n            </div>\n            \n            <div className=\"flex items-center space-x-4\">\n              <button \n                onClick={() => navigate('/storm-tracker')}\n                className=\"btn-secondary inline-flex items-center space-x-2\"\n              >\n                <AlertTriangle className=\"h-4 w-4\" />\n                <span>Storm Tracker</span>\n              </button>\n            \n              {results && (\n                <button \n                  onClick={handleExportData}\n                  className=\"btn-secondary inline-flex items-center space-x-2\"\n                >\n                  <Download className=\"h-4 w-4\" />\n                  <span>Export Data</span>\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"max-w-7xl mx-auto px-6 py-8\">\n        <div className=\"grid lg:grid-cols-3 gap-8\">\n          {/* Input Panel */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"card sticky top-8\">\n              <h2 className=\"text-xl font-semibold text-gray-900 mb-6\">Location & Date</h2>\n              \n              {/* Tab Navigation */}\n              <div className=\"flex space-x-1 mb-6 bg-gray-100 rounded-lg p-1\">\n                <button\n                  onClick={() => setActiveTab('search')}\n                  className={`flex-1 py-2 px-3 rounded-md text-sm font-medium transition-colors ${\n                    activeTab === 'search' \n                      ? 'bg-white text-primary-600 shadow-sm' \n                      : 'text-gray-600 hover:text-gray-900'\n                  }`}\n                >\n                  <Search className=\"h-4 w-4 inline mr-2\" />\n                  Search\n                </button>\n                <button\n                  onClick={() => setActiveTab('coordinates')}\n                  className={`flex-1 py-2 px-3 rounded-md text-sm font-medium transition-colors ${\n                    activeTab === 'coordinates' \n                      ? 'bg-white text-primary-600 shadow-sm' \n                      : 'text-gray-600 hover:text-gray-900'\n                  }`}\n                >\n                  <MapPin className=\"h-4 w-4 inline mr-2\" />\n                  Coordinates\n                </button>\n              </div>\n\n              {/* Location Input */}\n              {activeTab === 'search' ? (\n                <div className=\"mb-6\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Search for a location\n                  </label>\n                  \n                  {/* Google-style Search Bar */}\n                  <div className=\"relative mb-3\">\n                    <div className=\"flex space-x-2\">\n                      <div className=\"relative flex-1\">\n                        <input\n                          type=\"text\"\n                          value={location}\n                          onChange={(e) => handleLocationInputChange(e.target.value)}\n                          onFocus={() => {\n                            if (suggestions.length > 0) setShowSuggestions(true);\n                          }}\n                          onBlur={() => {\n                            // Delay hiding suggestions to allow clicks\n                            setTimeout(() => setShowSuggestions(false), 150);\n                          }}\n                          placeholder=\"Search cities, states, or countries...\"\n                          className=\"input-field pr-10 shadow-lg border-2 border-gray-200 focus:border-primary-500 focus:shadow-xl transition-all duration-200\"\n                          onKeyPress={(e) => {\n                            if (e.key === 'Enter') {\n                              handleLocationSearch();\n                              setShowSuggestions(false);\n                            }\n                          }}\n                        />\n                        <Search className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                      </div>\n                      <button \n                        onClick={handleLocationSearch}\n                        disabled={isLoading}\n                        className=\"btn-primary px-6 shadow-lg\"\n                      >\n                        Search\n                      </button>\n                    </div>\n\n                    {/* Suggestions Dropdown */}\n                    {showSuggestions && (suggestions.length > 0 || searchHistory.length > 0) && (\n                      <div className=\"absolute top-full left-0 right-0 bg-white border border-gray-200 rounded-lg shadow-2xl z-50 mt-1 max-h-80 overflow-y-auto\">\n                        {/* Search History */}\n                        {searchHistory.length > 0 && suggestions.length === 0 && (\n                          <>\n                            <div className=\"px-4 py-2 text-xs font-medium text-gray-500 bg-gray-50 border-b\">\n                              Recent searches\n                            </div>\n                            {searchHistory.map((item, index) => (\n                              <button\n                                key={`history-${index}`}\n                                onClick={() => handleSuggestionSelect(item)}\n                                className=\"w-full px-4 py-3 text-left hover:bg-gray-50 flex items-center space-x-3 border-b border-gray-100 last:border-b-0\"\n                              >\n                                <div className=\"w-6 h-6 bg-gray-100 rounded-full flex items-center justify-center\">\n                                  <MapPin className=\"h-3 w-3 text-gray-500\" />\n                                </div>\n                                <div className=\"flex-1\">\n                                  <div className=\"font-medium text-gray-900\">{item.name}</div>\n                                  <div className=\"text-sm text-gray-500\">{item.country}</div>\n                                </div>\n                                <div className=\"text-xs text-gray-400 capitalize\">{item.type}</div>\n                              </button>\n                            ))}\n                          </>\n                        )}\n\n                        {/* Live Suggestions */}\n                        {suggestions.length > 0 && (\n                          <>\n                            {suggestions.length > 0 && searchHistory.length > 0 && (\n                              <div className=\"px-4 py-2 text-xs font-medium text-gray-500 bg-gray-50 border-b\">\n                                Suggestions\n                              </div>\n                            )}\n                            {suggestions.map((suggestion, index) => (\n                              <button\n                                key={`suggestion-${index}`}\n                                onClick={() => handleSuggestionSelect(suggestion)}\n                                className=\"w-full px-4 py-3 text-left hover:bg-primary-50 flex items-center space-x-3 border-b border-gray-100 last:border-b-0 group\"\n                              >\n                                <div className=\"w-6 h-6 bg-primary-100 rounded-full flex items-center justify-center group-hover:bg-primary-200\">\n                                  <MapPin className=\"h-3 w-3 text-primary-600\" />\n                                </div>\n                                <div className=\"flex-1\">\n                                  <div className=\"font-medium text-gray-900\">{suggestion.name}</div>\n                                  <div className=\"text-sm text-gray-500\">{suggestion.country}</div>\n                                </div>\n                                <div className=\"text-xs text-primary-600 capitalize font-medium\">{suggestion.type}</div>\n                              </button>\n                            ))}\n                          </>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                  \n                  {/* Current Location Button */}\n                  <button\n                    onClick={handleCurrentLocation}\n                    disabled={isLoading}\n                    className=\"w-full flex items-center justify-center space-x-2 py-3 px-4 border-2 border-primary-300 text-primary-600 rounded-lg hover:bg-primary-50 hover:border-primary-400 transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed shadow-sm\"\n                  >\n                    <Navigation className=\"h-4 w-4\" />\n                    <span className=\"font-medium\">Use Current Location</span>\n                  </button>\n                </div>\n              ) : (\n                <div className=\"mb-6 space-y-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Latitude\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"any\"\n                      placeholder=\"e.g., 40.7128\"\n                      className=\"input-field\"\n                      onChange={(e) => {\n                        const lat = parseFloat(e.target.value);\n                        if (!isNaN(lat) && coordinates.lon) {\n                          handleCoordinateInput(lat, coordinates.lon);\n                        }\n                        setCoordinates(prev => ({ ...prev, lat }));\n                      }}\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Longitude\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"any\"\n                      placeholder=\"e.g., -74.0060\"\n                      className=\"input-field\"\n                      onChange={(e) => {\n                        const lon = parseFloat(e.target.value);\n                        if (!isNaN(lon) && coordinates.lat) {\n                          handleCoordinateInput(coordinates.lat, lon);\n                        }\n                        setCoordinates(prev => ({ ...prev, lon }));\n                      }}\n                    />\n                  </div>\n                </div>\n              )}\n\n              {/* Date Selection */}\n              <div className=\"mb-6\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  <Calendar className=\"h-4 w-4 inline mr-1\" />\n                  Target Date\n                </label>\n                <input\n                  type=\"date\"\n                  value={selectedDate}\n                  onChange={(e) => setSelectedDate(e.target.value)}\n                  className=\"input-field\"\n                />\n              </div>\n\n              {/* Current Coordinates Display */}\n              {coordinates.lat && coordinates.lon && (\n                <div className=\"mb-6 p-4 bg-primary-50 rounded-lg\">\n                  <h3 className=\"text-sm font-medium text-primary-900 mb-2\">Current Location</h3>\n                  <p className=\"text-sm text-primary-700\">\n                    Lat: {coordinates.lat.toFixed(4)}, Lon: {coordinates.lon.toFixed(4)}\n                  </p>\n                </div>\n              )}\n\n              {/* Error Display */}\n              {error && (\n                <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\n                  <div className=\"flex items-center space-x-2\">\n                    <AlertTriangle className=\"h-5 w-5 text-red-500\" />\n                    <p className=\"text-sm text-red-700\">{error}</p>\n                  </div>\n                </div>\n              )}\n\n              {/* Loading State */}\n              {isLoading && (\n                <div className=\"text-center py-8\">\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600 mx-auto mb-4\"></div>\n                  <p className=\"text-sm text-gray-600\">Analyzing weather data...</p>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Results Panel */}\n          <div className=\"lg:col-span-2\">\n            {results ? (\n              <ResultsDisplay results={results} />\n            ) : (\n              <div className=\"card text-center py-16\">\n                <div className=\"mb-6\">\n                  <BarChart3 className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n                  <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                    Ready to Analyze Weather Patterns\n                  </h3>\n                  <p className=\"text-gray-600 max-w-md mx-auto\">\n                    Enter a location and date to get started with weather probability predictions \n                    based on 30+ years of NASA satellite data.\n                  </p>\n                </div>\n                \n                <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4 max-w-2xl mx-auto\">\n                  {[\n                    { icon: Thermometer, label: 'Hot Weather', color: 'text-red-500' },\n                    { icon: Thermometer, label: 'Cold Weather', color: 'text-blue-500' },\n                    { icon: Droplets, label: 'Rainfall', color: 'text-blue-600' },\n                    { icon: Wind, label: 'Windy', color: 'text-gray-600' },\n                    { icon: Sun, label: 'Heat Index', color: 'text-orange-500' }\n                  ].map((item, index) => (\n                    <div key={index} className=\"text-center\">\n                      <item.icon className={`h-8 w-8 ${item.color} mx-auto mb-2`} />\n                      <p className=\"text-xs text-gray-500\">{item.label}</p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Map Section */}\n        {coordinates.lat && coordinates.lon && (\n          <div className=\"mt-8\">\n            <div className=\"card\">\n              <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Location Map</h2>\n              <WeatherMap \n                coordinates={coordinates} \n                onLocationSelect={(lat, lon) => handleCoordinateInput(lat, lon)}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}